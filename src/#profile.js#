/* eslint-disable no-bitwise */
/* eslint-disable no-alert */
/* eslint-disable react/no-did-mount-set-state */
/* eslint-disable react-native/no-inline-styles */
/* eslint-disable no-unused-vars */
import React, {Component} from 'react';

import {
  View,
  Image,
  Dimensions,
  Platform,
  TouchableOpacity,
  Alert,
} from 'react-native';

import {
  Container,
  Right,
  Body,
  Text,
  Icon,
  Content,
  List,
  ListItem,
  Thumbnail,
} from 'native-base';

import {headerRenkli} from '../Component/header';

import {
  getStorage,
  setStorage,
  sendPhoto,
  userProfile,
} from '../service/service';
import {connect} from 'react-redux';
import ImagePicker from 'react-native-image-crop-picker';
import * as userActions from './redux/actions/';
import * as profile from './redux/actions/';
import {spinner} from '../Component/spinner';

const profile_change_photo = require('../assets/Profile/profile_change_photo.png');
const profile_logo = require('../assets/Profile/profile_logo.png');
const profile_photo_mask = require('../assets/Profile/profile_photo_mask.png');
const token_button_dolu = require('../assets/Profile/token-button-dolu.png');

const profileResim =
  'http://antiqueruby.aliansoftware.net//Images/social/ic_msg_user02_s21_29.png';
class ProfileOld extends Component {
  constructor(props) {
    super(props);
    this.state = {
      loading: false,
      resim: profileResim,
      imageData: null,
      userId: null,
      Isim: '',
      Sehir: '',
      Yas: 21,
    };
  }
  componentDidMount = async () => {
    this.UserProfile();
    //console.log('Dimensions: ', width, 'x', height);
    const profiles = await getStorage('profilImage');
    const uid = await getStorage('uids');
    // console.log('prifles: ', this.props.userId, ' uid: ', uid);

    /*
    if (this.props.userId === uid) {
      if (profiles === null) {
        this.setState({resim: profileResim});
      } else {
        this.setState({resim: profiles});
      }
    }
    */
  };
  UserProfile = () => {
    try {
      this.setState({loading: true});
      userProfile().then(res => {
        console.log('profiller:', res);
        var dt = new Date(res.data.birthday);
        console.log('New BD: ', dt);
        if (res.status === true) {
          profile.setUName(res.data.name);
          profile.setProfileEmail(res.data.email);
          profile.setProfileGender(res.data.gender);
          profile.setSlogan(res.data.slogan);
          profile.setRegisteredAt(res.data.registered_at);
          profile.setProfileBirthday(res.data.birthday);
          profile.setProfileCITY(res.data.city.city);
          profile.setProfileCountryCode(res.data.city.country_code);
          profile.setLatLon(res.data.registered_location.lat);
          profile.setLonLat(res.data.registered_location.long);
          // if (res.data.profile_photo !== null) {
          profile.setProfilePhoto(res.data.profile_photo);
          // }
          this.setState({resim: res.data.profile_photo});
          setStorage('profilImage', res.data.profile_photo);
          console.log('resm: ', this.state.resim);
          this.setState({Isim: res.data.name});
          this.setState({Sehir: res.data.city.city});
          this.setState({Yas: res.data.age});
          this.setState({loading: false});
        } else {
          this.setState({loading: false});
          Alert.alert(
            'Profile Error',
            'Internet Bağlantınızı kontrol edin.',
            [{text: 'Tamam', onPress: () => ''}],
            {
              cancelable: true,
            },
          );
        }
      });
    } catch (error) {
      Alert.alert(
        'Profile Error',
        error,
        [{text: 'Tamam', onPress: () => ''}],
        {
          cancelable: true,
        },
      );
    }
  };
  SendPhoto = async val => {
    try {
      this.setState({loading: true});
      await sendPhoto(val).then(res => {
        console.log(JSON.stringify(res));
        if (res.status === true) {
          console.log('image Path: ', res.data.profile_photo);
          this.setState({resim: res.data.profile_photo});
          setStorage('uids', this.props.userId);
          setStorage('profilImage', res.data.profile_photo);
        }
        this.setState({loading: false});
      });
    } catch (error) {
      this.setState({loading: false});
      Alert.alert('Send Error', error, [{text: 'Tamam', onPress: () => ''}], {
        cancelable: true,
      });
    }
  };
  resimSec = () => {
    ImagePicker.openPicker({
      width: 300,
      height: 400,
      cropping: true,
      includeBase64: true,
      includeExif: true,
    }).then(image => {
      console.log(image);
      console.log('Mime: ', image.mime);
      console.log('my Data: ', image.data);
      //this.setState({resim: image.path});
      this.setState({imageData: image.data});
      this.SendPhoto(image.data);
      if (Platform.OS === 'ios') {
      }
    });
  };
  onProfilUpdate = () => {
    this.props.navigation.push('ProfilUpdate');
  };
  render() {
    return (
      <Container style={{flex: 1, backgroundColor: '#f5f5f5'}}>
        {headerRenkli('Hesabım', 'SearchMain', this.props, '#f5326f')}
        {spinner(this.state.loading)}
        <View style={{flex: 1, backgroundColor: 'transparent'}}>
          <View
            style={{
              flex: Platform.OS === 'ios' ? 0.6 : 0.72,
              backgroundColor: '#d1d1d1',
              justifyContent: 'center',
              alignItems: 'center',
            }}>
            <Thumbnail
              style={{
                width: 110,
                height: 110,
                borderRadius: 110 / 2,
                borderWidth: 3,
              }}
              borderColor="white"
              source={{uri: this.state.resim}}
            />
            <View
              style={{
                position: 'relative',
                marginTop: -90,
                marginStart: 90,
                //right: Platform.OS === 'ios' ? 110 : 105,
                //top: Platform.OS === 'ios' ? 80 : 60,
              }}
              importantForAccessibility="yes">
              <TouchableOpacity onPress={() => this.resimSec()}>
                <Image
                  source={profile_change_photo}
                  style={{height: 25, resizeMode: 'contain'}}
                />
              </TouchableOpacity>
            </View>
            <View style={{marginVertical: 5, marginTop: 75}}>
              <Text
                style={{
                  fontSize: 16,
                  fontFamily: 'Raleway-Bold',
                  textAlign: 'center',
                }}>
                {this.state.Isim}
                <Text
                  style={{
                    fontSize: 13,
                    fontFamily: 'Raleway-Regular',
                    fontWeight: 'normal',
                    textAlign: 'center',
                  }}>
                  {'\n'}
                  {this.state.Yas} - {this.state.Sehir}
                </Text>
              </Text>
            </View>
          </View>
          <View
            style={{
              justifyContent: 'center',
              alignItems: 'center',
              marginTop: -23,
            }}>
            <TouchableOpacity onPress={() => ''}>
              <Image
                source={token_button_dolu}
                style={{height: 50, resizeMode: 'contain'}}
              />

              <Text
                style={{
                  fontSize: 13,
                  fontFamily: 'Raleway-Bold',
                  fontWeight: 'normal',
                  textAlign: 'center',
                  marginLeft: 100,
                  marginTop: -33,
                  justifyContent: 'center',
                  color: '#fff',
                }}>
                JETON AL
              </Text>
              <Text
                style={{
                  fontSize: 13,
                  fontFamily: 'Raleway-Bold',
                  fontWeight: 'normal',
                  textAlign: 'center',
                  marginLeft: -100,
                  marginTop: -18,
                  justifyContent: 'center',
                  color: '#fff',
                }}>
                32
              </Text>
            </TouchableOpacity>
          </View>
          <View
            style={{flex: 1, backgroundColor: 'transparent', marginTop: 35}}>
            <Content>
              <List>
                <ListItem>
                  <Body>
                    <TouchableOpacity
                      style={{width: '100%'}}
                      onPress={() => this.onProfilUpdate()}>
                      <Text
                        style={{
                          fontSize: 12,
                          fontFamily: 'Raleway-Regular',
                          textAlign: 'left',
                        }}>
                        Profil ve Hesap Ayarları
                      </Text>
                    </TouchableOpacity>
                  </Body>
                  <Right>
                    <Icon active name="arrow-forward" />
                  </Right>
                </ListItem>
                <ListItem>
                  <Body>
                    <TouchableOpacity
                      style={{width: '100%'}}
                      onPress={() => alert('touched')}>
                      <Text
                        style={{
                          fontSize: 12,
                          fontFamily: 'Raleway-Regular',
                          textAlign: 'left',
                        }}>
                        Topluluk Kuralları
                      </Text>
                    </TouchableOpacity>
                  </Body>
                  <Right>
                    <Icon active name="arrow-forward" />
                  </Right>
                </ListItem>
                <ListItem>
                  <Body>
                    <TouchableOpacity
                      style={{width: '100%'}}
                      onPress={() => alert('touched')}>
                      <Text
                        style={{
                          fontSize: 12,
                          fontFamily: 'Raleway-Regular',
                          textAlign: 'left',
                        }}>
                        Yardım Merkezi
                      </Text>
                    </TouchableOpacity>
                  </Body>
                  <Right>
                    <Icon active name="arrow-forward" />
                  </Right>
                </ListItem>
                <ListItem>
                  <Body>
                    <TouchableOpacity
                      style={{width: '100%'}}
                      onPress={() => alert('touched')}>
                      <Text
                        style={{
                          fontSize: 12,
                          fontFamily: 'Raleway-Regular',
                          textAlign: 'left',
                        }}>
                        FogoTalk'u Paylaş
                      </Text>
                    </TouchableOpacity>
                  </Body>
                  <Right>
                    <Icon active name="arrow-forward" />
                  </Right>
                </ListItem>
                <ListItem>
                  <Body>
                    <TouchableOpacity
                      style={{width: '100%'}}
                      onPress={() => alert('touched')}>
                      <Text
                        style={{
                          fontSize: 12,
                          fontFamily: 'Raleway-Regular',
                          textAlign: 'left',
                        }}>
                        Bildirim Ayarları
                      </Text>
                    </TouchableOpacity>
                  </Body>
                  <Right>
                    <Icon active name="arrow-forward" />
                  </Right>
                </ListItem>
                <ListItem>
                  <Body>
                    <TouchableOpacity
                      style={{width: '100%'}}
                      onPress={() => alert('touched')}>
                      <Text
                        style={{
                          fontSize: 12,
                          fontFamily: 'Raleway-Regular',
                          textAlign: 'left',
                        }}>
                        Arkadaşını Davet
                      </Text>
                    </TouchableOpacity>
                  </Body>
                  <Right>
                    <Icon active name="arrow-forward" />
                  </Right>
                </ListItem>
                <ListItem>
                  <Body>
                    <TouchableOpacity
                      style={{width: '100%'}}
                      onPress={() => alert('touched')}>
                      <Text
                        style={{
                          fontSize: 12,
                          fontFamily: 'Raleway-Regular',
                          textAlign: 'left',
                        }}>
                        Gizlilik Politikası
                      </Text>
                    </TouchableOpacity>
                  </Body>
                  <Right>
                    <Icon active name="arrow-forward" />
                  </Right>
                </ListItem>
                <ListItem>
                  <Body>
                    <TouchableOpacity
                      style={{width: '100%'}}
                      onPress={() => alert('touched')}>
                      <Text
                        style={{
                          fontSize: 12,
                          fontFamily: 'Raleway-Regular',
                          textAlign: 'left',
                        }}>
                        Çerez Kullanımı
                      </Text>
                    </TouchableOpacity>
                  </Body>
                  <Right>
                    <Icon active name="arrow-forward" />
                  </Right>
                </ListItem>
                <ListItem>
                  <Body>
                    <TouchableOpacity
                      style={{width: '100%'}}
                      onPress={() => alert('touched')}>
                      <Text
                        style={{
                          fontSize: 12,
                          fontFamily: 'Raleway-Regular',
                          textAlign: 'left',
                        }}>
                        Verilerim
                      </Text>
                    </TouchableOpacity>
                  </Body>
                  <Right>
                    <Icon active name="arrow-forward" />
                  </Right>
                </ListItem>
                <ListItem>
                  <Body>
                    <TouchableOpacity onPress={() => alert('OTURUMU KAPAT')}>
                      <Text
                        style={{
                          fontSize: 12,
                          fontFamily: 'Raleway-Bold',
                          textAlign: 'center',
                          color: '#f85e61',
                        }}>
                        OTURUMU KAPAT
                      </Text>
                    </TouchableOpacity>
                  </Body>
                </ListItem>
                <ListItem>
                  <Body>
                    <TouchableOpacity onPress={() => alert('touched')}>
                      <Text
                        style={{
                          fontSize: 12,
                          fontFamily: 'Raleway-Bold',
                          textAlign: 'center',
                          color: '#f85e61',
                        }}>
                        Hesabımı Askıya Al
                      </Text>
                    </TouchableOpacity>
                  </Body>
                </ListItem>
                <View style={{justifyContent: 'center', alignItems: 'center'}}>
                  <Image
                    source={profile_logo}
                    style={{width: 80, resizeMode: 'contain'}}
                  />
                  <Text
                    style={{
                      fontSize: 10,
                      fontFamily: 'Raleway-Bold',
                      textAlign: 'center',
                      color: 'lightgray',
                    }}>
                    fogotalk v1.0.0 #12
                  </Text>
                </View>
                <View
                  style={{
                    flex: 1,
                    height: 20,
                    backgroundColor: 'transparent',
                  }}
                />
              </List>
            </Content>
          </View>
        </View>
      </Container>
    );
  }
}
const mapStateToProps = (state, ownProps) => ({
  userName: state.userReducers.username,
  userId: state.userReducers.userId,
  emailId: state.userReducers.email,
  tokenId: state.userReducers.token,
  gender: state.userReducers.gender,
  role: state.userReducers.role,
  Name: state.profileReducers.name,
});

export default connect(mapStateToProps)(ProfileOld);
//#d1d1d1
